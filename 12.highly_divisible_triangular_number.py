"""The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?"""
"""time:5.58741"""
import time
import math
start = time.time()

def devisors():
    total = 0
    i = 1
    while True:
        total += i
        if find_factors(total) > 500:
            print("Answer",total)
            break
        i += 1
 

def find_factors(num):
    #Checks if num is a clean square root, eg, 100
    if math.sqrt(num) == int(math.sqrt(num)):
        length = 1
    else:
        length = 2
    """Counts two for the factors between 2 and the square root of num.
    One of the pair of factors are found before or at square root of num"""  
    for i in range(2,int(math.sqrt(num))+1):
        if num%i == 0:
            length += 2
    return length

        

devisors()

elapsed = time.time() - start
print("Time: {:.5f} seconds".format(elapsed))
